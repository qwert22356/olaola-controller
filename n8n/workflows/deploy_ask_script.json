{
  "name": "deploy/ask/script",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/deploy/ask-script",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1100,
        -200
      ],
      "id": "168a67cd-5df5-4b36-b80e-981c1ebdd8b4",
      "name": "Webhook",
      "webhookId": "82ddd05c-e38f-446d-9ed5-47d85ec2cf76"
    },
    {
      "parameters": {
        "jsCode": "const input = $json[\"body\"] || {};\n\nconst ips = input.ip_address || [];\nconst webhook_ip = input.webhook_ip;\nconst username = input.username;\nconst password = input.password;\n\nreturn ips.map(ip => ({\n  json: {\n    ip_address: ip,\n    webhook_ip,\n    username,\n    password\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -820,
        -200
      ],
      "id": "1cede60a-2249-4d01-9252-0520a0faaa46",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -280,
        -220
      ],
      "id": "1d46b45a-de5a-4932-9f72-285307960c75",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "const ip = $json[\"ip_address\"];\nconst username = $json[\"username\"];\nconst password = $json[\"password\"];\nconst webhook = $json[\"webhook_ip\"];\n\nconst script = `#!/bin/bash\n\nquestion=\"$*\"\nsession_id_file=\"$HOME/.copilot_session_id\"\n\nif [ ! -f \"$session_id_file\" ]; then\n  uuid=$(cat /proc/sys/kernel/random/uuid)\n  echo \"$uuid\" > \"$session_id_file\"\nfi\nsession_id=$(cat \"$session_id_file\")\n\necho \"ðŸ¤– ok, let me see, wait a moment...\"\n\nresponse=$(curl -s -X POST http://${webhook}:5678/webhook/ask \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d \"{\\\\\"sessionId\\\\\": \\\\\"$session_id\\\\\", \\\\\"question\\\\\": \\\\\"$question\\\\\"}\")\n\nmode=$(echo \"$response\" | jq -r '.mode // empty')\n\nif [ \"$mode\" = \"exec\" ]; then\n  cmd=$(echo \"$response\" | jq -r '.cmd')\n  echo \"ðŸ§  OlaOla Copilot thinks you meant: $cmd\"\n  echo \"ðŸ’» Executing command...\"\n  eval \"$cmd\"\n  exit 0\nelif [ \"$mode\" = \"chat\" ]; then\n  reply=$(echo \"$response\" | jq -r '.reply')\n  echo \"ðŸ’¬ OlaOla Copilot says: $reply\"\n  exit 0\nelse\n  echo \"ðŸ’¥ Unexpected AI response. Raw content:\"\n  echo \"$response\"\n  exit 1\nfi`;\n\nreturn [{\n  json: {\n    ip_address: ip,\n    username: username,\n    password: password,\n    script_content: script\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        -140
      ],
      "id": "9875025b-7662-418b-ac34-9f08dfeea59a",
      "name": "Code1"
    },
    {
      "parameters": {
        "command": "=echo \"=== DEVICE: {{$json.ip_address}} ===\" && \\\nsshpass -p '{{$json.password}}' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 '{{$json.username}}'@{{$json.ip_address}} 'sudo bash -s' << 'EOF'\ncat << 'EOS' > /usr/local/bin/ask\n{{$json[\"script_content\"]}}\nEOS\n\nchmod +x /usr/local/bin/ask\nconfig save -y || echo \"config save not supported\"\nEOF"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        180,
        -140
      ],
      "id": "26d91898-db43-4b3f-a214-43b3345a8f82",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        160,
        -440
      ],
      "id": "602598e7-8a3f-4792-a86b-70f56730fa6a",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "const stdout = $json[\"stdout\"] || \"\";\nconst match = stdout.match(/DEVICE:\\s+([\\d.]+)/);\nconst ip = match ? match[1] : \"unknown\";\n\nreturn [{\n  json: {\n    ip_address: ip,\n    status: \"success\",\n    time: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -140
      ],
      "id": "c6502592-c067-46e1-b42f-dbcd6a6db8a8",
      "name": "Code2"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "ip_address",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -460,
        -340
      ],
      "id": "0c6a8029-53bb-4bb5-aacb-229ef9813821",
      "name": "Merge"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a5b2ea76-d63b-401f-94a6-15c1f7ad9b60",
              "leftValue": "={{ $json.status }}",
              "rightValue": "success",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        360,
        -420
      ],
      "id": "b066fbd1-b741-4519-b700-3e150bac65fe",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "networkdeploy_devices",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "llm_agent",
              "condition": "eq",
              "keyValue": "success"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -720,
        300
      ],
      "id": "f726ad35-e228-4b97-b3fe-46e06f306b4c",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "u1dPtQhZKTFreuwz",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/deploy/ask-script-done",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -980,
        300
      ],
      "id": "6fb996d8-674a-4efb-82e0-a7af796b0ee1",
      "name": "Webhook1",
      "webhookId": "0e981e4d-578d-41bf-b1f9-a026a1be3da1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "networkdeploy_devices",
          "mode": "list",
          "cachedResultName": "networkdeploy_devices"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ip_address": "={{ $json.ip_address }}",
            "llm_agent": "success"
          },
          "matchingColumns": [
            "ip_address"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "ip_address",
              "displayName": "ip_address",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hostname",
              "displayName": "hostname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "if_number",
              "displayName": "if_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "lldp_neighbors",
              "displayName": "lldp_neighbors",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "discovered_at",
              "displayName": "discovered_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "first_seen",
              "displayName": "first_seen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "snmp_module",
              "displayName": "snmp_module",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "vendor_sw",
              "displayName": "vendor_sw",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "vendor_hw",
              "displayName": "vendor_hw",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "hw_sku",
              "displayName": "hw_sku",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "llm_agent",
              "displayName": "llm_agent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        580,
        -520
      ],
      "id": "88d50235-9a6c-40b1-80e2-e4fa290daffd",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        -280,
        300
      ],
      "id": "4fa20e2d-6a69-4d21-a3ba-cd4a07a33c49",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5e1f346-04aa-4f3f-954a-4f308707c3f6",
              "name": "ip_address",
              "value": "={{ $json.ip_address }}",
              "type": "string"
            },
            {
              "id": "9ed9e07e-0d5b-435d-86e6-79e1435f7ee5",
              "name": "hostname",
              "value": "={{ $json.hostname }}",
              "type": "string"
            },
            {
              "id": "7ea14f14-30f1-43ff-bd0d-3d100a968622",
              "name": "vendor_sw",
              "value": "={{ $json.vendor_sw }}",
              "type": "string"
            },
            {
              "id": "cd6ac8da-7ecb-4b41-a28d-227163abb62c",
              "name": "hw_sku",
              "value": "={{ $json.hw_sku }}",
              "type": "string"
            },
            {
              "id": "758d7efd-2140-4b4c-b3ce-0fa58058e5f7",
              "name": "llm_agent",
              "value": "={{ $json.llm_agent }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -500,
        300
      ],
      "id": "83ee1c67-549e-40e3-88b8-8b8fffb8801b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ip_address, username, password\nFROM public.networkdeploy_devices_config_cli\nWHERE ip_address = '{{ $json.ip_address }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -640,
        -40
      ],
      "id": "2adb422a-7c04-4055-b0bf-85318445852d",
      "name": "Check Passwd",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Check Passwd",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Passwd": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d4fce616-8bd6-491b-a938-1f005dbe49ef",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3c4f8b2c2b4d02cf4fc2cfa5c4b6a1500ac4c1c82a34628dc509dca968f8700d"
  },
  "id": "olKLfH8APtlwJHnh",
  "tags": []
}