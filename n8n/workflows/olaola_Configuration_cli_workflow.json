{
  "name": "olaola/Configuration_cli_workflow",
  "nodes": [
    {
      "parameters": {
        "executeOnce": false,
        "command": "=echo \"=== DEVICE: {{$json.ip_address}} ===\" && \\\nsshpass -p '{{$json.password}}' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 '{{$json.username}}'@{{$json.ip_address}} \"sonic-cli -c 'show running-config'\" || echo '[ERROR] SSH failed'"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -520,
        -40
      ],
      "id": "3dc1443e-d9ea-496a-aed7-eb92d149d62b",
      "name": "Execute Command",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 4 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1500,
        -560
      ],
      "id": "92bc8073-14b1-415d-8426-5bd472e1cffe",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2929eb14-8137-4a42-b41b-4df9903dae68",
              "leftValue": "={{ $json.vendor_sw }}",
              "rightValue": "SONiC.4.4.",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -900,
        40
      ],
      "id": "5f33e12b-8e1e-4f27-91f6-1454ffbcd2be",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "networkdeploy_devices",
        "filters": {
          "conditions": [
            {
              "keyName": "ip_address",
              "condition": "eq",
              "keyValue": "={{ $json.ip_address }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -960,
        -560
      ],
      "id": "1110a2fb-2f94-43c7-b02c-3b626bfd515f",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "u1dPtQhZKTFreuwz",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=echo \"=== DEVICE: {{$json.ip_address}} ===\" && \\\nsshpass -p '{{$json.password}}' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 '{{$json.username}}'@{{$json.ip_address}} \"vtysh -c 'show running-config'\" || echo '[ERROR] SSH failed'"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -520,
        220
      ],
      "id": "c1ee7bf2-b8a2-4618-b9b8-b1968e517208",
      "name": "Execute Command1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const raw = item.json.stdout || \"\";\n  const match = raw.match(/=== DEVICE: (.+?) ===/);\n  const ip = match ? match[1] : 'unknown';\n\n  let cli_config = null;\n  let status = \"success\";\n\n  if (raw.includes(\"[ERROR]\")) {\n    status = \"failed\";\n  } else {\n    // 提取 CLI 配置部分（去掉前缀标记）\n    cli_config = raw.replace(/=== DEVICE: .+? ===\\n?/, '').trim();\n  }\n\n  results.push({\n    json: {\n      ip_address: ip,\n      cli_config,\n      status\n    }\n  });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -200,
        80
      ],
      "id": "afcc1a3d-84e9-4c14-9e0d-a8e077429657",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "networkdeploy_devices_config_cli",
          "mode": "list",
          "cachedResultName": "networkdeploy_devices_config_cli"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ip_address": "={{ $json.ip_address }}",
            "cli_config": "={{ $json.cli_config }}",
            "status": "={{ $json.status }}",
            "last_updated": "2025-05-20T10:46:07"
          },
          "matchingColumns": [
            "ip_address"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "ip_address",
              "displayName": "ip_address",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "cli_config",
              "displayName": "cli_config",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "password",
              "displayName": "password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_updated",
              "displayName": "last_updated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        0,
        80
      ],
      "id": "5b794a96-14ee-4b8e-8a07-26dcd4f63e40",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select ip_address, username, password from public.networkdeploy_devices_config_cli;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1240,
        -560
      ],
      "id": "16d5322d-1e44-4fcb-b74d-7531e409ef62",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -360,
        80
      ],
      "id": "392dc9f1-16e5-472f-997b-5d24f0633a0e",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ip_address, username, password\nFROM public.networkdeploy_devices_config_cli\nWHERE ip_address = '{{ $json.ip_address }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -720,
        -40
      ],
      "id": "0fdde89b-e26c-42d1-9c86-c0e825295385",
      "name": "Check Passwd",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ip_address, username, password\nFROM public.networkdeploy_devices_config_cli\nWHERE ip_address = '{{ $json.ip_address }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -720,
        220
      ],
      "id": "beee0739-0803-4014-a319-d1aab85ce850",
      "name": "Check Passwd1",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Execute Command": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Check Passwd",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Passwd1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Passwd": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Passwd1": {
      "main": [
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0ff10f6b-68f2-4bc5-92d8-14984c48a36f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3c4f8b2c2b4d02cf4fc2cfa5c4b6a1500ac4c1c82a34628dc509dca968f8700d"
  },
  "id": "veZGMhFOnQGhG84Y",
  "tags": []
}