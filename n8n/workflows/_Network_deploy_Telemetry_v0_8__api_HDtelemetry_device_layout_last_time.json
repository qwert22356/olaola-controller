{
  "name": "/Network_deploy+Telemetry_v0.8_/api/HDtelemetry/device_layout_last_time",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ip_address, hw_sku, hostname \nFROM networkdeploy_devices \nWHERE ip_address = '{{ $json.body.ip_list }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1380,
        -460
      ],
      "id": "4da5944e-b583-47fe-9211-d780c50a49b4",
      "name": "Get Devices3",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const item = items[0];\nconst interfaces = item.json.interfaces || [];\nconst l2status = item.json[\"l2_forwarding\"]?.[\"interfaces_status\"] || [];\n\nfor (let i of interfaces) {\n  if (!i.status || i.status === \"\") {\n    // 找到对应 interface 名称（如 \"Ethernet1\"）\n    const match = l2status.find(l2 => l2.interface === i.logical_port || l2.alias === i.physical_port);\n    if (match && match.oper) {\n      i.status = match.oper;\n    }\n  }\n}\n\nreturn [{ json: item.json }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        -60
      ],
      "id": "67ff1756-4204-482d-a1d6-397468a0e15c",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM datahub_agent_raw_v0_8\nWHERE ip_address = '{{ $json.body.ip_list }}'\nORDER BY TIMESTAMP DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1380,
        200
      ],
      "id": "46a3e3d1-a305-4ae4-b95b-0ea1fb91a680",
      "name": "Postgres5",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM datahub_platform_devices\nWHERE ip_address = '{{ $json.body.ip_list }}'\nORDER BY TIMESTAMP DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1380,
        20
      ],
      "id": "70c7cda7-5e6f-4c9e-973a-2b14d8b5c1d8",
      "name": "Postgres6",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM datahub_panel_metrics\nWHERE ip_address = '{{ $json.body.ip_list }}'\nORDER BY TIMESTAMP DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1380,
        -140
      ],
      "id": "d61054cc-1518-4d4b-9cba-8a5683a5f758",
      "name": "Postgres7",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM device_layout_panel_info\nWHERE ip_address = '{{ $json.body.ip_list }}'\nORDER BY created_at DESC\nLIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1380,
        -300
      ],
      "id": "9fac1739-f541-4fc3-a458-31b8e5b67c92",
      "name": "Postgres9",
      "credentials": {
        "postgres": {
          "id": "EzSF61njyrocgFwV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 5,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -1080,
        -100
      ],
      "id": "c68880e3-9037-4ed3-b0b0-1dd6e8537609",
      "name": "Merge"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/panel-metrics/fetch_last_time",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1860,
        -180
      ],
      "id": "620b95ba-054a-4ffc-a0e4-513325803f9a",
      "name": "Webhook",
      "webhookId": "4389069c-ce88-4b6f-a624-50ca31a44f9e"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        -740,
        -60
      ],
      "id": "cd2f2472-c430-4726-831c-d365afd9c98a",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1860,
        80
      ],
      "id": "4a2fe06d-b821-450e-85e7-eb3be19371d3",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Devices3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Devices3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get Devices3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "30b6f906-27d5-4109-8e7d-276e71b7988c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3c4f8b2c2b4d02cf4fc2cfa5c4b6a1500ac4c1c82a34628dc509dca968f8700d"
  },
  "id": "X6k4F1pnNNc7cJHR",
  "tags": []
}